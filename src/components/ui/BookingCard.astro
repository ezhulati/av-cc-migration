---
/**
 * Booking Card Component
 * Sticky booking card like Booking.com/Airbnb
 */

interface Props {
  price?: string;
  rating?: number;
  reviewCount?: number;
  bookingURL?: string;
  title: string;
  location?: string;
}

const { price, rating, reviewCount, bookingURL, title, location } = Astro.props;
---

<div class="booking-card">
  <div class="booking-card-content">
    <!-- Price Section -->
    {price && (
      <div class="price-section">
        <div class="price-label">From</div>
        <div class="price-value">{price}</div>
        <div class="price-note">per night</div>
      </div>
    )}

    <!-- Rating Section -->
    {rating && (
      <div class="rating-section">
        <div class="rating-badge">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
          </svg>
          <span class="rating-value">{rating.toFixed(1)}</span>
        </div>
        {reviewCount && (
          <div class="review-count">{reviewCount} reviews</div>
        )}
      </div>
    )}

    <!-- Check Availability Form -->
    <form class="booking-form" action={bookingURL || '#'} method="get" target="_blank">
      <div class="form-group">
        <label for="checkin">Check-in</label>
        <input
          type="date"
          id="checkin"
          name="checkin"
          required
          min={new Date().toISOString().split('T')[0]}
        />
      </div>

      <div class="form-group">
        <label for="checkout">Check-out</label>
        <input
          type="date"
          id="checkout"
          name="checkout"
          required
          min={new Date().toISOString().split('T')[0]}
        />
      </div>

      <div class="form-group">
        <label for="guests">Guests</label>
        <select id="guests" name="guests">
          <option value="1">1 guest</option>
          <option value="2" selected>2 guests</option>
          <option value="3">3 guests</option>
          <option value="4">4 guests</option>
          <option value="5">5 guests</option>
          <option value="6+">6+ guests</option>
        </select>
      </div>

      <button type="submit" class="booking-btn">
        Check Availability
      </button>

      <div class="booking-note">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
          <polyline points="22 4 12 14.01 9 11.01"></polyline>
        </svg>
        Free cancellation available
      </div>
    </form>

    <!-- Trust Indicators -->
    <div class="trust-indicators">
      <div class="trust-item">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path>
        </svg>
        <span>Verified property</span>
      </div>
      <div class="trust-item">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
        </svg>
        <span>Instant confirmation</span>
      </div>
    </div>

    <!-- Contact Options -->
    <div class="contact-section">
      <a href="#contact-host" class="contact-link">
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
          <polyline points="22,6 12,13 2,6"></polyline>
        </svg>
        Contact host
      </a>
      <a href="#report" class="report-link">
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <circle cx="12" cy="12" r="10"></circle>
          <line x1="12" y1="8" x2="12" y2="12"></line>
          <line x1="12" y1="16" x2="12.01" y2="16"></line>
        </svg>
        Report this listing
      </a>
    </div>
  </div>
</div>

<style>
  .booking-card {
    position: sticky;
    top: 2rem;
    background: white;
    border: 1px solid #ddd;
    border-radius: 12px;
    padding: 1.5rem;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
  }

  .price-section {
    margin-bottom: 1.5rem;
    padding-bottom: 1.5rem;
    border-bottom: 1px solid #eee;
  }

  .price-label {
    font-size: 0.85rem;
    color: #666;
    margin-bottom: 0.25rem;
  }

  .price-value {
    font-size: 1.75rem;
    font-weight: 700;
    color: #222;
    margin-bottom: 0.25rem;
  }

  .price-note {
    font-size: 0.85rem;
    color: #666;
  }

  .rating-section {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 1.5rem;
  }

  .rating-badge {
    display: flex;
    align-items: center;
    gap: 0.35rem;
    color: #d32f2f;
    font-weight: 600;
    font-size: 0.95rem;
  }

  .rating-badge svg {
    color: #d32f2f;
  }

  .review-count {
    font-size: 0.85rem;
    color: #666;
  }

  .booking-form {
    margin-bottom: 1.5rem;
  }

  .form-group {
    margin-bottom: 1rem;
  }

  .form-group label {
    display: block;
    font-size: 0.85rem;
    font-weight: 600;
    color: #222;
    margin-bottom: 0.5rem;
  }

  .form-group input,
  .form-group select {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #ddd;
    border-radius: 8px;
    font-size: 0.95rem;
    transition: border-color 0.2s;
  }

  .form-group input:focus,
  .form-group select:focus {
    outline: none;
    border-color: #d32f2f;
  }

  .booking-btn {
    width: 100%;
    background: #d32f2f;
    color: white;
    border: none;
    padding: 1rem;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s;
    margin-bottom: 1rem;
  }

  .booking-btn:hover {
    background: #b71c1c;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(211, 47, 47, 0.3);
  }

  .booking-note {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.85rem;
    color: #2e7d32;
    margin-bottom: 1.5rem;
  }

  .booking-note svg {
    color: #2e7d32;
  }

  .trust-indicators {
    padding: 1.5rem 0;
    border-top: 1px solid #eee;
    border-bottom: 1px solid #eee;
    margin-bottom: 1.5rem;
  }

  .trust-item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-size: 0.9rem;
    color: #222;
    margin-bottom: 0.75rem;
  }

  .trust-item:last-child {
    margin-bottom: 0;
  }

  .trust-item svg {
    color: #2e7d32;
  }

  .contact-section {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .contact-link,
  .report-link {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.9rem;
    color: #222;
    text-decoration: none;
    transition: color 0.2s;
  }

  .contact-link:hover {
    color: #d32f2f;
  }

  .report-link {
    color: #666;
  }

  .report-link:hover {
    color: #d32f2f;
  }

  /* Mobile Responsive */
  @media (max-width: 1024px) {
    .booking-card {
      position: fixed;
      bottom: 0;
      left: 0;
      right: 0;
      top: auto;
      border-radius: 16px 16px 0 0;
      z-index: 100;
      box-shadow: 0 -4px 12px rgba(0, 0, 0, 0.15);
      max-height: 90vh;
      overflow-y: auto;
    }
  }

  @media (min-width: 1025px) {
    .booking-card {
      max-width: 400px;
    }
  }
</style>

<script>
  // Auto-calculate checkout date (min 1 night)
  const checkinInput = document.getElementById('checkin') as HTMLInputElement;
  const checkoutInput = document.getElementById('checkout') as HTMLInputElement;

  checkinInput?.addEventListener('change', () => {
    if (checkinInput.value && checkoutInput) {
      const checkinDate = new Date(checkinInput.value);
      checkinDate.setDate(checkinDate.getDate() + 1);
      const minCheckout = checkinDate.toISOString().split('T')[0];
      checkoutInput.min = minCheckout;

      // Auto-set checkout if empty or invalid
      if (!checkoutInput.value || checkoutInput.value <= checkinInput.value) {
        checkoutInput.value = minCheckout;
      }
    }
  });
</script>
