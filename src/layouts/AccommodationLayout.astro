---
/**
 * Premium Accommodation Layout
 * Classic chic design that respects the user and showcases properties beautifully
 */

import BaseLayout from './BaseLayout.astro';
import LightboxGallery from '../components/LightboxGallery.astro';
import type { CollectionEntry } from 'astro:content';

export interface Props {
  accommodation: CollectionEntry<'accommodation'>;
}

const { accommodation } = Astro.props;
const { Content } = await accommodation.render();

const {
  title,
  description,
  location,
  city,
  address,
  featuredImage,
  images,
  amenities,
  price,
  priceFrom,
  rating,
  ratingWords,
  numberOfReviews,
  ratings,
  reviews,
  roomTypes,
  nearbyAttractions,
  nearbyRestaurants,
  nearbyBeaches,
  whatsNearby,
  airports,
  paymentMethods,
  accommodationType,
  starRating,
  bookingURL,
  language,
  coordinates,
  bestFor,
} = accommodation.data;

const slug = accommodation.data.slug || accommodation.slug;

// Process images - keep external URLs (CDN images are valid!)
const allImages = [
  featuredImage,
  ...(images || [])
].filter(Boolean) as string[];

const hasDetailedRatings = ratings && rating && rating > 0;
---

<BaseLayout
  title={title}
  description={description}
  canonical={`https://albaniavisit.com/${language === 'sq' ? 'sq/akomodimi' : 'accommodation'}/${slug}/`}
  image={featuredImage}
  type="website"
  language={language}
>
  <article class="accommodation-page">
    <!-- Breadcrumbs -->
    <div class="container-custom">
      <nav class="breadcrumbs" aria-label="Breadcrumb">
        <a href={language === 'sq' ? '/sq/' : '/'}>Home</a>
        <span class="separator">/</span>
        <a href={language === 'sq' ? '/sq/accommodation/' : '/accommodation/'}>Accommodation</a>
        <span class="separator">/</span>
        <span class="current">{city || location || 'Property'}</span>
      </nav>
    </div>

    <!-- Property Header -->
    <section class="property-header">
      <div class="container-custom">
        <div class="header-content">
          <div class="header-main">
            <div class="header-badges">
              {accommodationType && (
                <span class="property-type-badge">
                  {accommodationType.charAt(0).toUpperCase() + accommodationType.slice(1)}
                </span>
              )}
              {starRating && starRating > 0 && (
                <div class="star-rating-display">
                  {[...Array(5)].map((_, i: number) => (
                    <svg
                      width="18"
                      height="18"
                      viewBox="0 0 24 24"
                      fill={i < starRating ? '#FDB813' : 'none'}
                      stroke={i < starRating ? '#FDB813' : '#D1D5DB'}
                      stroke-width="2"
                    >
                      <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon>
                    </svg>
                  ))}
                </div>
              )}
            </div>
            <h1 class="property-title">{title}</h1>
            <div class="location-display">
              <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"/>
                <circle cx="12" cy="10" r="3"/>
              </svg>
              <span>{address || location || city}</span>
            </div>
          </div>
          {rating && rating > 0 && (
            <div class="rating-display">
              <div class="rating-score">{rating.toFixed(1)}</div>
              <div class="rating-info">
                <strong>{ratingWords || 'Excellent'}</strong>
                {numberOfReviews && numberOfReviews > 0 && (
                  <span>{numberOfReviews.toLocaleString()} reviews</span>
                )}
              </div>
            </div>
          )}
        </div>
      </div>
    </section>

    <!-- Photo Gallery -->
    {allImages && allImages.length > 0 && (
      <section class="gallery-section">
        <div class="container-custom">
          <LightboxGallery images={allImages} title={title} />
        </div>
      </section>
    )}

    <!-- Main Content Area -->
    <div class="container-custom">
      <div class="content-layout">
        <!-- Left Column: Property Details -->
        <div class="main-column">

          <!-- About This Property -->
          <section class="content-card">
            <h2 class="section-title">About This Property</h2>
            <div class="description-content">
              <Content />
            </div>
          </section>

          <!-- Popular Amenities -->
          {amenities && amenities.length > 0 && (
            <section class="content-card">
              <h2 class="section-title">Popular Amenities</h2>
              <div class="amenities-grid">
                {amenities.map((amenity: string) => (
                  <div class="amenity-item">
                    <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5">
                      <polyline points="20 6 9 17 4 12"/>
                    </svg>
                    <span>{amenity}</span>
                  </div>
                ))}
              </div>
            </section>
          )}

          <!-- Available Rooms -->
          {roomTypes && roomTypes.length > 0 && (
            <section class="content-card">
              <h2 class="section-title">Available Rooms</h2>
              <div class="rooms-list">
                {roomTypes.map((room: string) => (
                  <div class="room-item">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"/>
                      <polyline points="9 22 9 12 15 12 15 22"/>
                    </svg>
                    <span>{room}</span>
                  </div>
                ))}
              </div>
            </section>
          )}

          <!-- Guest Ratings -->
          {hasDetailedRatings && (
            <section class="content-card">
              <h2 class="section-title">Guest Ratings</h2>
              <div class="ratings-list">
                {ratings.location > 0 && (
                  <div class="rating-row">
                    <div class="rating-row-header">
                      <span class="rating-label">Location</span>
                      <strong class="rating-value">{ratings.location.toFixed(1)}</strong>
                    </div>
                    <div class="rating-bar-track">
                      <div class="rating-bar-fill" style={`width: ${(ratings.location / 10) * 100}%`}></div>
                    </div>
                  </div>
                )}
                {ratings.cleanliness > 0 && (
                  <div class="rating-row">
                    <div class="rating-row-header">
                      <span class="rating-label">Cleanliness</span>
                      <strong class="rating-value">{ratings.cleanliness.toFixed(1)}</strong>
                    </div>
                    <div class="rating-bar-track">
                      <div class="rating-bar-fill" style={`width: ${(ratings.cleanliness / 10) * 100}%`}></div>
                    </div>
                  </div>
                )}
                {ratings.comfort > 0 && (
                  <div class="rating-row">
                    <div class="rating-row-header">
                      <span class="rating-label">Comfort</span>
                      <strong class="rating-value">{ratings.comfort.toFixed(1)}</strong>
                    </div>
                    <div class="rating-bar-track">
                      <div class="rating-bar-fill" style={`width: ${(ratings.comfort / 10) * 100}%`}></div>
                    </div>
                  </div>
                )}
                {ratings.facilities > 0 && (
                  <div class="rating-row">
                    <div class="rating-row-header">
                      <span class="rating-label">Facilities</span>
                      <strong class="rating-value">{ratings.facilities.toFixed(1)}</strong>
                    </div>
                    <div class="rating-bar-track">
                      <div class="rating-bar-fill" style={`width: ${(ratings.facilities / 10) * 100}%`}></div>
                    </div>
                  </div>
                )}
                {ratings.staff > 0 && (
                  <div class="rating-row">
                    <div class="rating-row-header">
                      <span class="rating-label">Staff</span>
                      <strong class="rating-value">{ratings.staff.toFixed(1)}</strong>
                    </div>
                    <div class="rating-bar-track">
                      <div class="rating-bar-fill" style={`width: ${(ratings.staff / 10) * 100}%`}></div>
                    </div>
                  </div>
                )}
                {ratings.value > 0 && (
                  <div class="rating-row">
                    <div class="rating-row-header">
                      <span class="rating-label">Value for Money</span>
                      <strong class="rating-value">{ratings.value.toFixed(1)}</strong>
                    </div>
                    <div class="rating-bar-track">
                      <div class="rating-bar-fill" style={`width: ${(ratings.value / 10) * 100}%`}></div>
                    </div>
                  </div>
                )}
                {ratings.wifi > 0 && (
                  <div class="rating-row">
                    <div class="rating-row-header">
                      <span class="rating-label">Free WiFi</span>
                      <strong class="rating-value">{ratings.wifi.toFixed(1)}</strong>
                    </div>
                    <div class="rating-bar-track">
                      <div class="rating-bar-fill" style={`width: ${(ratings.wifi / 10) * 100}%`}></div>
                    </div>
                  </div>
                )}
              </div>
            </section>
          )}

          <!-- Guest Reviews -->
          {reviews && reviews.length > 0 && (
            <section class="content-card">
              <h2 class="section-title">Guest Reviews</h2>
              <div class="reviews-container">
                {reviews.map((review: {name: string, country: string, text: string}) => (
                  <div class="review-card">
                    <div class="review-header">
                      <div class="reviewer-avatar">
                        {review.name.charAt(0).toUpperCase()}
                      </div>
                      <div class="reviewer-info">
                        <strong class="reviewer-name">{review.name}</strong>
                        <span class="reviewer-country">{review.country}</span>
                      </div>
                    </div>
                    <p class="review-text">"{review.text}"</p>
                  </div>
                ))}
              </div>
            </section>
          )}
        </div>

        <!-- Right Column: Booking & Location Info -->
        <aside class="sidebar-column">

          <!-- Booking Card -->
          <div class="booking-card sticky-card">
            {priceFrom && (
              <div class="price-display">
                <span class="price-prefix">From</span>
                <div class="price-value">${priceFrom}</div>
                <span class="price-suffix">per night</span>
              </div>
            )}

            <a
              href={bookingURL || `https://www.booking.com/searchresults.html?ss=${encodeURIComponent(city || location || title)}&aid=8035640`}
              target="_blank"
              rel="noopener noreferrer"
              class="book-button"
            >
              <span>Check Availability</span>
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"/>
                <polyline points="15 3 21 3 21 9"/>
                <line x1="10" y1="14" x2="21" y2="3"/>
              </svg>
            </a>

            {bestFor && (
              <div class="best-for-tag">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                </svg>
                {bestFor}
              </div>
            )}

            <div class="booking-benefits">
              <div class="benefit-item">
                <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5">
                  <polyline points="20 6 9 17 4 12"/>
                </svg>
                <span>Free cancellation</span>
              </div>
              <div class="benefit-item">
                <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5">
                  <polyline points="20 6 9 17 4 12"/>
                </svg>
                <span>No prepayment needed</span>
              </div>
              <div class="benefit-item">
                <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5">
                  <polyline points="20 6 9 17 4 12"/>
                </svg>
                <span>Instant confirmation</span>
              </div>
            </div>

            {paymentMethods && paymentMethods.length > 0 && (
              <div class="payment-info">
                <span class="payment-label">Accepted payment:</span>
                <div class="payment-methods">
                  {paymentMethods.map((method: string) => (
                    <span class="payment-method">{method}</span>
                  ))}
                </div>
              </div>
            )}
          </div>

          <!-- Location Information Cards -->
          {nearbyBeaches && nearbyBeaches.length > 0 && (
            <div class="info-card">
              <h3 class="info-card-title">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M12 2v20M2 12h20M6.5 2v20M17.5 2v20"/>
                </svg>
                Nearby Beaches
              </h3>
              <ul class="info-list">
                {nearbyBeaches.map((beach: string) => (
                  <li>{beach}</li>
                ))}
              </ul>
            </div>
          )}

          {nearbyAttractions && nearbyAttractions.length > 0 && (
            <div class="info-card">
              <h3 class="info-card-title">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"/>
                  <circle cx="12" cy="10" r="3"/>
                </svg>
                Top Attractions
              </h3>
              <ul class="info-list">
                {nearbyAttractions.slice(0, 8).map((attraction: string) => (
                  <li>{attraction}</li>
                ))}
              </ul>
            </div>
          )}

          {nearbyRestaurants && nearbyRestaurants.length > 0 && (
            <div class="info-card">
              <h3 class="info-card-title">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M3 2v7c0 1.1.9 2 2 2h4a2 2 0 0 0 2-2V2M7 2v20M21 15V2a5 5 0 0 0-5 5v6c0 1.1.9 2 2 2h3Zm0 0v7"/>
                </svg>
                Restaurants Nearby
              </h3>
              <ul class="info-list">
                {nearbyRestaurants.map((restaurant: string) => (
                  <li>{restaurant}</li>
                ))}
              </ul>
            </div>
          )}

          {whatsNearby && whatsNearby.length > 0 && (
            <div class="info-card">
              <h3 class="info-card-title">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <circle cx="12" cy="12" r="10"/>
                  <path d="M12 6v6l4 2"/>
                </svg>
                What's Nearby
              </h3>
              <ul class="info-list">
                {whatsNearby.slice(0, 8).map((place: string) => (
                  <li>{place}</li>
                ))}
              </ul>
            </div>
          )}

          {airports && airports.length > 0 && (
            <div class="info-card">
              <h3 class="info-card-title">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M17.8 19.2 16 11l3.5-3.5C21 6 21.5 4 21 3c-1-.5-3 0-4.5 1.5L13 8 4.8 6.2c-.5-.1-.9.1-1.1.5l-.3.5c-.2.5-.1 1 .3 1.3L9 12l-2 3H4l-1 1 3 2 2 3 1-1v-3l3-2 3.5 5.3c.3.4.8.5 1.3.3l.5-.2c.4-.3.6-.7.5-1.2z"/>
                </svg>
                Nearest Airports
              </h3>
              <ul class="info-list">
                {airports.map((airport: string) => (
                  <li>{airport}</li>
                ))}
              </ul>
            </div>
          )}
        </aside>
      </div>
    </div>
  </article>
</BaseLayout>

<style>
  /* Container */
  .container-custom {
    max-width: 1280px;
    margin: 0 auto;
    padding: 0 24px;
  }

  .accommodation-page {
    background: #fafafa;
    min-height: 100vh;
    padding-bottom: 80px;
  }

  /* Breadcrumbs */
  .breadcrumbs {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 20px 0;
    font-size: 14px;
    color: #666;
  }

  .breadcrumbs a {
    color: #666;
    text-decoration: none;
    transition: color 0.2s;
  }

  .breadcrumbs a:hover {
    color: #e41e20;
  }

  .breadcrumbs .separator {
    color: #d1d5db;
  }

  .breadcrumbs .current {
    color: #1a1a1a;
    font-weight: 600;
  }

  /* Property Header */
  .property-header {
    background: white;
    border-bottom: 1px solid #e5e7eb;
    padding: 32px 0;
    margin-bottom: 32px;
  }

  .header-content {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 32px;
  }

  .header-main {
    flex: 1;
  }

  .header-badges {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-bottom: 16px;
  }

  .property-type-badge {
    display: inline-block;
    padding: 6px 16px;
    background: #f0f9ff;
    color: #0369a1;
    border-radius: 20px;
    font-size: 13px;
    font-weight: 600;
    text-transform: capitalize;
  }

  .star-rating-display {
    display: flex;
    gap: 2px;
  }

  .property-title {
    font-size: 36px;
    font-weight: 700;
    color: #1a1a1a;
    margin: 0 0 12px 0;
    line-height: 1.2;
  }

  .location-display {
    display: flex;
    align-items: center;
    gap: 8px;
    color: #666;
    font-size: 16px;
  }

  .location-display svg {
    color: #999;
    flex-shrink: 0;
  }

  .rating-display {
    display: flex;
    align-items: center;
    gap: 16px;
    background: linear-gradient(135deg, #003B95 0%, #0052CC 100%);
    padding: 20px 28px;
    border-radius: 16px;
    color: white;
    box-shadow: 0 4px 12px rgba(0, 59, 149, 0.2);
  }

  .rating-score {
    font-size: 44px;
    font-weight: 700;
    line-height: 1;
  }

  .rating-info {
    display: flex;
    flex-direction: column;
    gap: 4px;
  }

  .rating-info strong {
    font-size: 17px;
    font-weight: 600;
  }

  .rating-info span {
    font-size: 14px;
    opacity: 0.9;
  }

  /* Gallery Section */
  .gallery-section {
    margin-bottom: 48px;
  }

  /* Content Layout */
  .content-layout {
    display: grid;
    grid-template-columns: 1fr 380px;
    gap: 32px;
    align-items: start;
  }

  /* Main Column */
  .main-column {
    display: flex;
    flex-direction: column;
    gap: 24px;
  }

  .content-card {
    background: white;
    border-radius: 16px;
    padding: 32px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);
    border: 1px solid #f0f0f0;
  }

  .section-title {
    font-size: 24px;
    font-weight: 700;
    color: #1a1a1a;
    margin: 0 0 24px 0;
    line-height: 1.2;
  }

  .description-content {
    font-size: 16px;
    line-height: 1.75;
    color: #444;
  }

  .description-content :global(p) {
    margin-bottom: 16px;
  }

  .description-content :global(p:last-child) {
    margin-bottom: 0;
  }

  /* Amenities Grid */
  .amenities-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
    gap: 12px;
  }

  .amenity-item {
    display: flex;
    align-items: center;
    gap: 10px;
    padding: 12px 16px;
    background: #fafafa;
    border-radius: 10px;
    font-size: 15px;
    color: #333;
    border: 1px solid #f0f0f0;
  }

  .amenity-item svg {
    color: #22c55e;
    flex-shrink: 0;
  }

  /* Rooms List */
  .rooms-list {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
    gap: 16px;
  }

  .room-item {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 16px 20px;
    background: #f0f9ff;
    border: 1px solid #e0f2fe;
    border-radius: 12px;
    font-weight: 500;
    color: #0369a1;
    font-size: 15px;
  }

  .room-item svg {
    flex-shrink: 0;
  }

  /* Ratings List */
  .ratings-list {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }

  .rating-row {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .rating-row-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .rating-label {
    font-size: 15px;
    color: #666;
    font-weight: 500;
  }

  .rating-value {
    font-size: 17px;
    font-weight: 700;
    color: #1a1a1a;
  }

  .rating-bar-track {
    height: 8px;
    background: #e5e7eb;
    border-radius: 4px;
    overflow: hidden;
  }

  .rating-bar-fill {
    height: 100%;
    background: linear-gradient(90deg, #22c55e 0%, #16a34a 100%);
    border-radius: 4px;
    transition: width 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Reviews */
  .reviews-container {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }

  .review-card {
    padding: 24px;
    background: #fafafa;
    border-radius: 12px;
    border-left: 4px solid #003B95;
  }

  .review-header {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-bottom: 12px;
  }

  .reviewer-avatar {
    width: 48px;
    height: 48px;
    border-radius: 50%;
    background: linear-gradient(135deg, #003B95 0%, #0052CC 100%);
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 20px;
    font-weight: 700;
    flex-shrink: 0;
  }

  .reviewer-info {
    display: flex;
    flex-direction: column;
    gap: 2px;
  }

  .reviewer-name {
    font-size: 16px;
    font-weight: 600;
    color: #1a1a1a;
  }

  .reviewer-country {
    font-size: 14px;
    color: #666;
  }

  .review-text {
    font-size: 15px;
    line-height: 1.6;
    color: #555;
    font-style: italic;
    margin: 0;
  }

  /* Sidebar */
  .sidebar-column {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }

  @media (min-width: 1024px) {
    .sidebar-column {
      position: sticky;
      top: 2rem; /* Space below navigation */
      align-self: flex-start;
      z-index: 10; /* Ensure sidebar stays above main content */
    }
  }

  .sticky-card {
    /* Removed redundant sticky positioning - parent handles it */
  }

  .booking-card {
    background: white;
    border-radius: 16px;
    padding: 28px;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
    border: 2px solid #e5e7eb;
  }

  .price-display {
    text-align: center;
    padding-bottom: 24px;
    margin-bottom: 24px;
    border-bottom: 2px solid #f3f4f6;
  }

  .price-prefix {
    display: block;
    font-size: 14px;
    color: #666;
    font-weight: 500;
    margin-bottom: 8px;
  }

  .price-value {
    font-size: 44px;
    font-weight: 700;
    color: #1a1a1a;
    line-height: 1;
    margin-bottom: 4px;
  }

  .price-suffix {
    display: block;
    font-size: 14px;
    color: #888;
  }

  .book-button {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    width: 100%;
    padding: 18px 24px;
    background: linear-gradient(135deg, #e41e20 0%, #c41825 100%);
    color: white;
    border: none;
    border-radius: 12px;
    font-size: 16px;
    font-weight: 700;
    cursor: pointer;
    text-decoration: none;
    transition: all 0.2s;
    box-shadow: 0 2px 8px rgba(228, 30, 32, 0.2);
  }

  .book-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(228, 30, 32, 0.3);
  }

  .book-button svg {
    flex-shrink: 0;
  }

  .best-for-tag {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    padding: 12px 16px;
    background: #fef3c7;
    color: #92400e;
    border-radius: 10px;
    font-size: 14px;
    font-weight: 600;
    margin: 16px 0 20px 0;
  }

  .best-for-tag svg {
    color: #f59e0b;
    flex-shrink: 0;
  }

  .booking-benefits {
    display: flex;
    flex-direction: column;
    gap: 12px;
    padding: 20px 0;
    border-top: 1px solid #f3f4f6;
    border-bottom: 1px solid #f3f4f6;
    margin-bottom: 20px;
  }

  .benefit-item {
    display: flex;
    align-items: center;
    gap: 10px;
    font-size: 14px;
    color: #333;
    font-weight: 500;
  }

  .benefit-item svg {
    color: #22c55e;
    flex-shrink: 0;
  }

  .payment-info {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .payment-label {
    font-size: 13px;
    color: #666;
    font-weight: 600;
  }

  .payment-methods {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
  }

  .payment-method {
    padding: 6px 12px;
    background: #fafafa;
    border: 1px solid #e5e7eb;
    border-radius: 8px;
    font-size: 12px;
    font-weight: 600;
    color: #555;
  }

  /* Info Cards */
  .info-card {
    background: white;
    border-radius: 16px;
    padding: 24px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);
    border: 1px solid #f0f0f0;
  }

  .info-card-title {
    display: flex;
    align-items: center;
    gap: 10px;
    font-size: 18px;
    font-weight: 700;
    color: #1a1a1a;
    margin: 0 0 16px 0;
  }

  .info-card-title svg {
    color: #003B95;
    flex-shrink: 0;
  }

  .info-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .info-list li {
    font-size: 14px;
    color: #555;
    padding-left: 20px;
    position: relative;
  }

  .info-list li::before {
    content: '→';
    position: absolute;
    left: 0;
    color: #003B95;
    font-weight: 700;
  }

  /* Responsive */
  @media (max-width: 1024px) {
    .content-layout {
      grid-template-columns: 1fr;
    }

    .sidebar-column {
      order: -1;
    }

    .sticky-card {
      position: static;
    }
  }

  @media (max-width: 768px) {
    .container-custom {
      padding: 0 16px;
    }

    .property-header {
      padding: 24px 0;
    }

    .header-content {
      flex-direction: column;
      gap: 20px;
    }

    .property-title {
      font-size: 28px;
    }

    .rating-display {
      width: 100%;
      padding: 16px 20px;
    }

    .rating-score {
      font-size: 36px;
    }

    .content-card {
      padding: 24px;
    }

    .section-title {
      font-size: 20px;
    }

    .amenities-grid {
      grid-template-columns: 1fr;
    }

    .rooms-list {
      grid-template-columns: 1fr;
    }

    .booking-card {
      padding: 24px;
    }

    .price-value {
      font-size: 36px;
    }
  }
</style>
