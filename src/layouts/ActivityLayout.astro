---
import BaseLayout from './BaseLayout.astro';
import type { CollectionEntry } from 'astro:content';

interface Props {
  activity: CollectionEntry<'activities'>;
}

const { activity } = Astro.props;
const { Content } = await activity.render();

// Destructure frontmatter data with fallbacks
const {
  title,
  description,
  category,
  featuredImage,
} = activity.data;

// Use frontmatter slug or fall back to file system slug
const slug = activity.data.slug || activity.slug;

// Canonical URL
const canonicalURL = `https://albaniavisit.com/activities/${slug}/`;

// Featured image for meta tags
const ogImage = featuredImage || '/images/albaniavisit-og-default.jpg';
---

<BaseLayout
  title={`${title} | Visit Albania`}
  description={description}
  canonical={canonicalURL}
  image={ogImage}
>
  <article class="activity-page">
    <!-- Hero Section -->
    <section class="hero-section">
      {featuredImage ? (
        <div class="hero-image">
          <img
            src={featuredImage}
            alt={title}
            loading="eager"
          />
          <div class="hero-overlay">
            <div class="hero-content">
              <div class="breadcrumbs">
                <a href="/">Home</a>
                <span>/</span>
                <a href="/activities/">Activities</a>
                {category && (
                  <>
                    <span>/</span>
                    <span>{category}</span>
                  </>
                )}
              </div>
              <h1>{title}</h1>
              {category && <p class="category-tag">{category}</p>}
              <p class="lead-description">{description}</p>
            </div>
          </div>
        </div>
      ) : (
        <div class="hero-text-only">
          <div class="container">
            <div class="breadcrumbs">
              <a href="/">Home</a>
              <span>/</span>
              <a href="/activities/">Activities</a>
              {category && (
                <>
                  <span>/</span>
                  <span>{category}</span>
                </>
              )}
            </div>
            <h1>{title}</h1>
            {category && <p class="category-tag">{category}</p>}
            <p class="lead-description">{description}</p>
          </div>
        </div>
      )}
    </section>

    <div class="content-wrapper">
      <div class="container">
        <div class="content-grid">
          <!-- Main Content -->
          <div class="main-content">
            <div class="prose" data-article-content>
              <Content />
            </div>
          </div>

          <!-- Sidebar -->
          <aside class="sidebar">
            <!-- Quick Info Card -->
            {category && (
              <div class="info-card">
                <h3>Activity Type</h3>
                <div class="category-badge">
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M12 2L2 7l10 5 10-5-10-5z"></path>
                    <path d="M2 17l10 5 10-5"></path>
                    <path d="M2 12l10 5 10-5"></path>
                  </svg>
                  <span>{category}</span>
                </div>
              </div>
            )}

            <!-- Explore More -->
            <div class="info-card">
              <h3>Explore More</h3>
              <div class="explore-links">
                <a href="/activities/" class="explore-link">
                  <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M12 2L2 7l10 5 10-5-10-5z"></path>
                    <path d="M2 17l10 5 10-5"></path>
                    <path d="M2 12l10 5 10-5"></path>
                  </svg>
                  <span>All Activities</span>
                </a>
                <a href="/destinations/" class="explore-link">
                  <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path>
                    <circle cx="12" cy="10" r="3"></circle>
                  </svg>
                  <span>Destinations</span>
                </a>
                <a href="/accommodation/" class="explore-link">
                  <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                    <line x1="16" y1="2" x2="16" y2="6"></line>
                    <line x1="8" y1="2" x2="8" y2="6"></line>
                    <line x1="3" y1="10" x2="21" y2="10"></line>
                  </svg>
                  <span>Find Accommodation</span>
                </a>
                <a href="/attractions/" class="explore-link">
                  <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
                  </svg>
                  <span>Attractions</span>
                </a>
              </div>
            </div>

            <!-- Planning Tips -->
            <div class="info-card tips-card">
              <h3>
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <circle cx="12" cy="12" r="10"></circle>
                  <path d="M12 16v-4"></path>
                  <path d="M12 8h.01"></path>
                </svg>
                Planning Tips
              </h3>
              <ul class="tips-list">
                <li>Check weather conditions before planning</li>
                <li>Book guided tours in advance when available</li>
                <li>Bring appropriate gear and equipment</li>
                <li>Respect local customs and environment</li>
              </ul>
            </div>
          </aside>
        </div>
      </div>
    </div>
  </article>
</BaseLayout>

<style>
  /* Hero Section */
  .hero-section {
    margin-top: -2rem;
  }

  .hero-image {
    position: relative;
    height: 92vh;
    min-height: 750px;
    overflow: hidden;
  }

  .hero-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .hero-overlay {
    position: absolute;
    inset: 0;
    background: linear-gradient(to bottom, transparent 40%, rgba(0,0,0,0.4) 70%, rgba(0,0,0,0.8));
    display: flex;
    align-items: flex-end;
    padding: 2rem 2rem;
  }

  .hero-content {
    max-width: 1200px;
    margin: 0 auto;
    width: 100%;
    color: white;
  }

  .hero-text-only {
    background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
    color: white;
    padding: 4rem 2rem;
  }

  .hero-text-only .container {
    max-width: 1200px;
    margin: 0 auto;
  }

  .breadcrumbs {
    display: flex;
    gap: 0.5rem;
    font-size: 0.875rem;
    margin-bottom: 1rem;
    opacity: 0.9;
  }

  .breadcrumbs a {
    color: inherit;
    text-decoration: none;
  }

  .breadcrumbs a:hover {
    text-decoration: underline;
  }

  .hero-content h1,
  .hero-text-only h1 {
    font-size: 3rem;
    font-weight: 700;
    margin: 0 0 0.5rem 0;
    line-height: 1.2;
    text-align: left;
  }

  .category-tag {
    font-size: 1rem;
    font-weight: 500;
    margin: 0 0 1rem 0;
    opacity: 0.9;
  }

  .lead-description {
    font-size: 1.25rem;
    max-width: 700px;
    line-height: 1.6;
    margin: 0;
    text-align: left;
  }

  /* Content Grid */
  .content-wrapper {
    padding: 3rem 2rem;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
  }

  .content-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 3rem;
  }

  @media (min-width: 1024px) {
    .content-grid {
      grid-template-columns: 1fr 350px;
    }
  }

  /* Prose Styles */
  .prose {
    font-size: 1.125rem;
    line-height: 1.75;
    color: #2c3e50;
  }

  .prose h2 {
    font-size: 2rem;
    margin-top: 2.5rem;
    margin-bottom: 1rem;
    color: #2c3e50;
  }

  .prose h3 {
    font-size: 1.5rem;
    margin-top: 2rem;
    margin-bottom: 0.75rem;
    color: #34495e;
  }

  .prose p {
    margin-bottom: 1.25rem;
  }

  .prose img {
    max-width: 100%;
    height: auto;
    border-radius: 8px;
    margin: 2rem 0;
  }

  .prose a {
    color: #3498db;
    text-decoration: none;
  }

  .prose a:hover {
    text-decoration: underline;
  }

  .prose ul,
  .prose ol {
    margin: 1.5rem 0;
    padding-left: 2rem;
  }

  .prose li {
    margin-bottom: 0.5rem;
  }

  /* Hidden Content for Read More */
  .prose .hidden-content {
    display: none;
  }

  .prose .revealed-content {
    animation: fadeIn 0.4s ease-in;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Read More Button */
  .read-more-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    width: 100%;
    margin: 2rem 0;
    padding: 1rem 2rem;
    background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
    color: white;
    border: none;
    font-size: 1.0625rem;
    font-weight: 600;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 12px rgba(52, 152, 219, 0.3);
  }

  .read-more-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(52, 152, 219, 0.4);
  }

  .read-more-btn:active {
    transform: translateY(0);
  }

  .read-more-btn span {
    letter-spacing: 0.3px;
    order: 1;
  }

  .read-more-btn svg {
    flex-shrink: 0;
    order: 2;
    margin-left: 0.25rem;
    animation: bounce 2s infinite;
  }

  @keyframes bounce {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(4px);
    }
  }

  /* Sidebar */
  .sidebar {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .info-card {
    background: white;
    border: 1px solid #dee2e6;
    border-radius: 8px;
    padding: 1.5rem;
  }

  .info-card h3 {
    font-size: 1.25rem;
    margin: 0 0 1rem 0;
    color: #2c3e50;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .category-badge {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 1rem;
    background: #e8f4f8;
    border-radius: 6px;
    color: #2c3e50;
    font-weight: 500;
  }

  .category-badge svg {
    color: #3498db;
  }

  /* Explore Links */
  .explore-links {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .explore-link {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem;
    border-radius: 4px;
    background: #f8f9fa;
    color: #2c3e50;
    text-decoration: none;
    transition: background-color 0.2s;
  }

  .explore-link:hover {
    background: #e9ecef;
  }

  .explore-link svg {
    color: #3498db;
    flex-shrink: 0;
  }

  /* Tips Card */
  .tips-card {
    background: linear-gradient(135deg, #f0f8ff 0%, #e0f0ff 100%);
    border-color: #3498db;
  }

  .tips-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .tips-list li {
    padding-left: 1.5rem;
    margin-bottom: 0.75rem;
    position: relative;
  }

  .tips-list li:last-child {
    margin-bottom: 0;
  }

  .tips-list li::before {
    content: "→";
    position: absolute;
    left: 0;
    color: #3498db;
    font-weight: bold;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .hero-content h1,
    .hero-text-only h1 {
      font-size: 2rem;
    }

    .lead-description {
      font-size: 1rem;
    }

    .hero-image {
      height: 80vh;
      min-height: 600px;
    }

    .prose {
      font-size: 1rem;
    }
  }
</style>

<script is:inline>
  // ========================================
  // Article Read More Functionality
  // ========================================
  document.addEventListener('DOMContentLoaded', function() {
    const articleContent = document.querySelector('[data-article-content]');

    if (!articleContent) return;

    // Get all direct children
    const elements = Array.from(articleContent.children);

    // Count all paragraphs and H2s to find a good insertion point
    let paragraphCount = 0;
    let h2Count = 0;
    let insertIndex = -1;

    for (let i = 0; i < elements.length; i++) {
      if (elements[i].tagName === 'H2') {
        h2Count++;
      }
      if (elements[i].tagName === 'P') {
        paragraphCount++;
        // Insert after 3 paragraphs OR after 2nd H2 section starts (whichever comes first)
        if (paragraphCount >= 3 || (h2Count >= 2 && paragraphCount >= 2)) {
          insertIndex = i;
          break;
        }
      }
    }

    // Only show button if there's substantial content after the insertion point
    if (insertIndex !== -1 && insertIndex < elements.length - 3) {
      // Create Read More button FIRST
      const readMoreBtn = document.createElement('button');
      readMoreBtn.className = 'read-more-btn';
      readMoreBtn.innerHTML = `
        <span>Continue Reading Full Story</span>
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M19 9l-7 7-7-7"></path>
        </svg>
      `;

      // Insert button after the paragraph
      elements[insertIndex].insertAdjacentElement('afterend', readMoreBtn);

      // NOW hide everything after the insertion point
      // We need to re-query to account for the button we just added
      const allChildren = Array.from(articleContent.children);
      const buttonIndex = allChildren.indexOf(readMoreBtn);

      for (let i = buttonIndex + 1; i < allChildren.length; i++) {
        allChildren[i].style.display = 'none';
        allChildren[i].setAttribute('data-hidden-by-readmore', 'true');
      }

      // Handle click
      readMoreBtn.addEventListener('click', () => {
        // Show all hidden content
        const hiddenElements = articleContent.querySelectorAll('[data-hidden-by-readmore="true"]');
        hiddenElements.forEach(el => {
          el.style.display = '';
          el.removeAttribute('data-hidden-by-readmore');
          el.classList.add('revealed-content');
        });
        // Remove the button
        readMoreBtn.remove();
      });
    }
  });
</script>
