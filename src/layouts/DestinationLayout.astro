---
import BaseLayout from './BaseLayout.astro';
import QuickContextBar from '../components/QuickContextBar.astro';
import ExpandableSection from '../components/ExpandableSection.astro';
import ImageSlider from '../components/ImageSlider.astro';
import type { CollectionEntry } from 'astro:content';

interface Props {
  destination: CollectionEntry<'destinations'>;
}

const { destination } = Astro.props;
const { Content } = await destination.render();

// Destructure frontmatter data with fallbacks
const {
  title,
  description,
  region,
  featuredImage,
  images = [],
  coordinates,
  highlights = [],
} = destination.data;

// Optional fields that may not exist in all destinations
const essence = (destination.data as any).essence;
const distanceFromTirana = (destination.data as any).distanceFromTirana;
const budgetRange = (destination.data as any).budgetRange;
const timeNeeded = (destination.data as any).timeNeeded;
const bestSeason = (destination.data as any).bestSeason;

// Use frontmatter slug or fall back to file system slug
const slug = destination.data.slug || destination.slug;

// Canonical URL
const canonicalURL = `https://albaniavisit.com/destinations/${slug}/`;

// Featured image for meta tags
const ogImage = featuredImage || images[0] || '/images/albaniavisit-og-default.jpg';

// All images for gallery
const allImages = featuredImage ? [featuredImage, ...images] : images;
---

<BaseLayout
  title={`${title} | Visit Albania`}
  description={description}
  canonical={canonicalURL}
  image={ogImage}
>
  <article class="destination-page">
    <!-- Quick Context Bar -->
    <QuickContextBar
      distanceFromTirana={distanceFromTirana}
      budgetRange={budgetRange}
      timeNeeded={timeNeeded}
      bestSeason={bestSeason}
    />

    <!-- Hero Section -->
    <section class="hero-section">
      {featuredImage && (
        <div class="hero-image">
          <img
            src={featuredImage}
            alt={title}
            loading="eager"
          />
          <div class="hero-overlay">
            <div class="hero-content">
              <div class="breadcrumbs">
                <a href="/">Home</a>
                <span>/</span>
                <a href="/destinations/">Destinations</a>
              </div>
              <h1>{title}</h1>
              <p class="lead-description">{essence || description}</p>
            </div>
          </div>
        </div>
      )}
      {!featuredImage && (
        <div class="hero-text-only">
          <div class="container">
            <div class="breadcrumbs">
              <a href="/">Home</a>
              <span>/</span>
              <a href="/destinations/">Destinations</a>
            </div>
            <h1>{title}</h1>
            <p class="lead-description">{essence || description}</p>
          </div>
        </div>
      )}
    </section>

    <div class="content-wrapper">
      <div class="container">
        <div class="content-grid">
          <!-- Main Content -->
          <div class="main-content">
            <!-- Highlights Section -->
            {highlights.length > 0 && (
              <section class="highlights-section">
                <h2 class="section-heading">Highlights</h2>
                <ul class="highlights-list">
                  {highlights.map((highlight) => (
                    <li>
                      <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"></path>
                      </svg>
                      <span>{highlight}</span>
                    </li>
                  ))}
                </ul>
              </section>
            )}

            <!-- Main Content from Markdown -->
            <div class="prose" data-article-content>
              <Content />
            </div>

            <!-- Read More Button (inserted by JS) -->

            <!-- Image Slider -->
            {allImages.length > 0 && (
              <section class="gallery-section">
                <h2 class="section-heading">Photo Gallery</h2>
                <ImageSlider images={allImages} title={title} showThumbnails={true} />
              </section>
            )}

            <!-- Quick Planning Section (Expandable) - Moved to end -->
            <section class="planning-section">
              <h2 class="section-heading">Plan Your Visit</h2>

              <ExpandableSection title="Getting There & Around" icon="plane" variant="default" defaultOpen={false}>
                <p><strong>From Tirana:</strong> {distanceFromTirana || 'Check local transport options'}</p>
                <p>This section will contain detailed transport information once we migrate the full content.</p>
              </ExpandableSection>

              <ExpandableSection title="Where to Stay" icon="bed" variant="default" defaultOpen={false}>
                <p><strong>Budget:</strong> {budgetRange ? `${budgetRange} per day` : 'Varies by season'}</p>
                <p>Accommodation recommendations will appear here after content migration.</p>
              </ExpandableSection>

              <ExpandableSection title="Know Before You Go" icon="warning" variant="warning" defaultOpen={false}>
                <ul>
                  <li>Best visited during {bestSeason || 'spring and autumn'}</li>
                  <li>Plan to spend {timeNeeded || '1-2 days'} exploring</li>
                  <li>Bring comfortable walking shoes</li>
                  <li>Learn a few basic Albanian phrases</li>
                </ul>
              </ExpandableSection>
            </section>
          </div>

          <!-- Sidebar -->
          <aside class="sidebar">
            <!-- Quick Info Card -->
            <div class="info-card">
              <h3>Quick Info</h3>
              <dl class="info-list">
                {region && (
                  <>
                    <dt>
                      <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path>
                        <circle cx="12" cy="10" r="3"></circle>
                      </svg>
                      Region
                    </dt>
                    <dd>{region}</dd>
                  </>
                )}
                {coordinates && coordinates.lat !== 0 && coordinates.lng !== 0 && (
                  <>
                    <dt>
                      <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <circle cx="12" cy="12" r="10"></circle>
                        <line x1="2" y1="12" x2="22" y2="12"></line>
                        <path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"></path>
                      </svg>
                      Coordinates
                    </dt>
                    <dd>
                      <a
                        href={`https://www.google.com/maps?q=${coordinates.lat},${coordinates.lng}`}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="map-link"
                      >
                        {coordinates.lat.toFixed(4)}, {coordinates.lng.toFixed(4)}
                        <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                          <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path>
                          <polyline points="15 3 21 3 21 9"></polyline>
                          <line x1="10" y1="14" x2="21" y2="3"></line>
                        </svg>
                      </a>
                    </dd>
                  </>
                )}
              </dl>
            </div>

            <!-- Related Destinations (placeholder for future) -->
            <div class="info-card">
              <h3>Explore More</h3>
              <div class="explore-links">
                <a href="/destinations/" class="explore-link">
                  <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
                  </svg>
                  <span>All Destinations</span>
                </a>
                <a href="/accommodation/" class="explore-link">
                  <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                    <line x1="16" y1="2" x2="16" y2="6"></line>
                    <line x1="8" y1="2" x2="8" y2="6"></line>
                    <line x1="3" y1="10" x2="21" y2="10"></line>
                  </svg>
                  <span>Find Accommodation</span>
                </a>
                <a href="/activities/" class="explore-link">
                  <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M12 2L2 7l10 5 10-5-10-5z"></path>
                    <path d="M2 17l10 5 10-5"></path>
                    <path d="M2 12l10 5 10-5"></path>
                  </svg>
                  <span>Things to Do</span>
                </a>
                <a href="/attractions/" class="explore-link">
                  <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
                  </svg>
                  <span>Nearby Attractions</span>
                </a>
              </div>
            </div>

            <!-- Travel Tips -->
            <div class="info-card tips-card">
              <h3>
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <circle cx="12" cy="12" r="10"></circle>
                  <path d="M12 16v-4"></path>
                  <path d="M12 8h.01"></path>
                </svg>
                Travel Tips
              </h3>
              <ul class="tips-list">
                <li>Best visited during spring (April-May) or autumn (September-October)</li>
                <li>Bring comfortable walking shoes for exploring</li>
                <li>Learn a few basic Albanian phrases</li>
                <li>Respect local customs and traditions</li>
              </ul>
            </div>
          </aside>
        </div>
      </div>
    </div>
  </article>
</BaseLayout>

<script is:inline>
  // ========================================
  // Article Read More Functionality
  // ========================================
  document.addEventListener('DOMContentLoaded', function() {
    const articleContent = document.querySelector('[data-article-content]');

    if (!articleContent) {
      console.log('⚠️ No element with [data-article-content] found');
      return;
    }

    console.log('✅ Found article content element');

    // Get all direct children
    const elements = Array.from(articleContent.children);

    // Count all paragraphs and H2s to find a good insertion point
    let paragraphCount = 0;
    let h2Count = 0;
    let insertIndex = -1;

    for (let i = 0; i < elements.length; i++) {
      if (elements[i].tagName === 'H2') {
        h2Count++;
      }
      if (elements[i].tagName === 'P') {
        paragraphCount++;
        // Insert after 3 paragraphs OR after 2nd H2 section starts (whichever comes first)
        if (paragraphCount >= 3 || (h2Count >= 2 && paragraphCount >= 2)) {
          insertIndex = i;
          break;
        }
      }
    }

    console.log(`Found ${paragraphCount} paragraphs, ${h2Count} H2s, insertIndex: ${insertIndex}, total elements: ${elements.length}`);

    // Only show button if there's substantial content after the insertion point
    if (insertIndex !== -1 && insertIndex < elements.length - 3) {
      console.log('✅ Inserting Read More button');
      // Create Read More button FIRST
      const readMoreBtn = document.createElement('button');
      readMoreBtn.className = 'read-more-btn';
      readMoreBtn.innerHTML = `
        <span>Continue Reading Full Story</span>
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M19 9l-7 7-7-7"></path>
        </svg>
      `;

      // Insert button after the paragraph
      elements[insertIndex].insertAdjacentElement('afterend', readMoreBtn);

      // NOW hide everything after the insertion point
      // We need to re-query to account for the button we just added
      const allChildren = Array.from(articleContent.children);
      const buttonIndex = allChildren.indexOf(readMoreBtn);

      for (let i = buttonIndex + 1; i < allChildren.length; i++) {
        allChildren[i].style.display = 'none';
        allChildren[i].setAttribute('data-hidden-by-readmore', 'true');
      }

      // Handle click
      readMoreBtn.addEventListener('click', () => {
        // Show all hidden content
        const hiddenElements = articleContent.querySelectorAll('[data-hidden-by-readmore="true"]');
        hiddenElements.forEach(el => {
          el.style.display = '';
          el.removeAttribute('data-hidden-by-readmore');
          el.classList.add('revealed-content');
        });
        // Remove the button
        readMoreBtn.remove();
      });
    }
  });
</script>

<style>
  /* Hero Section */
  .hero-section {
    /* Removed negative margin to accommodate QuickContextBar */
  }

  .hero-image {
    position: relative;
    height: 75vh;
    overflow: hidden;
  }

  .hero-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .hero-overlay {
    position: absolute;
    inset: 0;
    background: linear-gradient(to bottom, rgba(0,0,0,0.2), rgba(0,0,0,0.7));
    display: flex;
    align-items: flex-end;
    padding: 3rem 2rem;
  }

  .hero-content {
    max-width: 1200px;
    margin: 0 auto;
    width: 100%;
    color: white;
    text-align: left;
  }

  .hero-text-only {
    background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
    color: white;
    padding: 4rem 2rem;
  }

  .hero-text-only .container {
    max-width: 1200px;
    margin: 0 auto;
    text-align: left;
  }

  .breadcrumbs {
    display: flex;
    gap: 0.5rem;
    font-size: 0.8125rem;
    margin-bottom: 1.25rem;
    opacity: 0.85;
    font-weight: 500;
  }

  .breadcrumbs a {
    color: inherit;
    text-decoration: none;
  }

  .breadcrumbs a:hover {
    text-decoration: underline;
  }

  .hero-content h1,
  .hero-text-only h1 {
    font-size: 3rem;
    font-weight: 700;
    margin: 0 0 1rem 0;
    line-height: 1.15;
  }

  .lead-description {
    font-size: 1.125rem;
    max-width: 700px;
    line-height: 1.65;
    margin: 0;
    opacity: 0.95;
  }

  /* Content Grid */
  .content-wrapper {
    padding: 3rem 2rem;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
  }

  .content-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 3rem;
  }

  @media (min-width: 1024px) {
    .content-grid {
      grid-template-columns: 1fr 350px;
    }
  }

  /* Highlights Section */
  .highlights-section {
    background: #f8f9fa;
    border-left: 4px solid #e74c3c;
    padding: 2rem;
    margin-bottom: 2rem;
    border-radius: 4px;
  }

  .highlights-section .section-heading {
    margin-top: 0;
    margin-bottom: 1.25rem;
  }

  .highlights-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .highlights-list li {
    display: flex;
    gap: 0.75rem;
    margin-bottom: 0.75rem;
    line-height: 1.6;
  }

  .highlights-list svg {
    flex-shrink: 0;
    color: #e74c3c;
    margin-top: 0.1rem;
  }

  /* Planning Section */
  .planning-section {
    margin: 2rem 0;
  }

  .section-heading {
    font-size: 1.75rem;
    margin-bottom: 1.25rem;
    color: #2c3e50;
    font-weight: 600;
  }

  /* Prose Styles */
  .prose {
    font-size: 1.125rem;
    line-height: 1.75;
    color: #2c3e50;
  }

  .prose h2 {
    font-size: 2rem;
    margin-top: 2.5rem;
    margin-bottom: 1rem;
    color: #2c3e50;
  }

  .prose h3 {
    font-size: 1.5rem;
    margin-top: 2rem;
    margin-bottom: 0.75rem;
    color: #34495e;
  }

  .prose p {
    margin-bottom: 1.25rem;
  }

  .prose img {
    max-width: 100%;
    height: auto;
    border-radius: 8px;
    margin: 2rem 0;
  }

  .prose a {
    color: #e74c3c;
    text-decoration: none;
  }

  .prose a:hover {
    text-decoration: underline;
  }

  .prose ul,
  .prose ol {
    margin: 1.5rem 0;
    padding-left: 2rem;
  }

  .prose li {
    margin-bottom: 0.5rem;
  }

  /* Hidden Content for Read More */
  .prose .hidden-content {
    display: none;
  }

  .prose .revealed-content {
    animation: fadeIn 0.4s ease-in;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Read More Button */
  .read-more-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    width: 100%;
    margin: 2rem 0;
    padding: 1rem 2rem;
    background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
    color: white;
    border: none;
    font-size: 1.0625rem;
    font-weight: 600;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 12px rgba(231, 76, 60, 0.3);
  }

  .read-more-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(231, 76, 60, 0.4);
  }

  .read-more-btn:active {
    transform: translateY(0);
  }

  .read-more-btn span {
    letter-spacing: 0.3px;
    order: 1;
  }

  .read-more-btn svg {
    flex-shrink: 0;
    order: 2;
    margin-left: 0.25rem;
    animation: bounce 2s infinite;
  }

  @keyframes bounce {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(4px);
    }
  }

  /* Gallery Section */
  .gallery-section {
    margin: 2rem 0;
  }

  /* Sidebar */
  .sidebar {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .info-card {
    background: white;
    border: 1px solid #dee2e6;
    border-radius: 8px;
    padding: 1.5rem;
  }

  .info-card h3 {
    font-size: 1.25rem;
    margin: 0 0 1rem 0;
    color: #2c3e50;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .info-list {
    margin: 0;
  }

  .info-list dt {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 600;
    color: #2c3e50;
    margin-bottom: 0.25rem;
  }

  .info-list dt svg {
    color: #e74c3c;
  }

  .info-list dd {
    margin: 0 0 1rem 1.75rem;
    color: #6c757d;
  }

  .info-list dd:last-child {
    margin-bottom: 0;
  }

  .map-link {
    color: #e74c3c;
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }

  .map-link:hover {
    text-decoration: underline;
  }

  /* Explore Links */
  .explore-links {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .explore-link {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem;
    border-radius: 4px;
    background: #f8f9fa;
    color: #2c3e50;
    text-decoration: none;
    transition: background-color 0.2s;
  }

  .explore-link:hover {
    background: #e9ecef;
  }

  .explore-link svg {
    color: #e74c3c;
    flex-shrink: 0;
  }

  /* Tips Card */
  .tips-card {
    background: linear-gradient(135deg, #fff5f5 0%, #ffe8e8 100%);
    border-color: #e74c3c;
  }

  .tips-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .tips-list li {
    padding-left: 1.5rem;
    margin-bottom: 0.75rem;
    position: relative;
  }

  .tips-list li:last-child {
    margin-bottom: 0;
  }

  .tips-list li::before {
    content: "→";
    position: absolute;
    left: 0;
    color: #e74c3c;
    font-weight: bold;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .hero-content h1,
    .hero-text-only h1 {
      font-size: 2rem;
    }

    .lead-description {
      font-size: 1rem;
    }

    .hero-image {
      height: 60vh;
    }

    .prose {
      font-size: 1rem;
    }
  }
</style>
